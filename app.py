import streamlit as st
import pandas as pd
import altair as alt

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏ô‡πâ‡∏≤ Dashboard
st.set_page_config(page_title="Multi-File Dashboard", page_icon="üìä", layout="wide")

# ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏´‡∏°‡∏î (Viewer/Editor) ‡∏î‡πâ‡∏ß‡∏¢ query_params
query_params = st.query_params
mode = query_params.get("mode", ["edit"])[0]  # ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏õ‡πá‡∏ô "edit"

# ‚úÖ ‡∏ã‡πà‡∏≠‡∏ô Sidebar ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡πá‡∏ô Viewer
if mode == "edit":
    st.sidebar.title("üîß ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏£‡∏≤‡∏ü")

# ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå CSV ‡∏•‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤ (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏´‡∏°‡∏î Viewer)
if mode == "view":
    uploaded_files = ["data1.csv", "data2.csv"]  # ‡πÉ‡∏™‡πà‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡πÇ‡∏ä‡∏ß‡πå
else:
    uploaded_files = st.sidebar.file_uploader("üìÇ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå CSV", type=["csv"], accept_multiple_files=True)

# ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏£‡∏≤‡∏ü
if uploaded_files:
    for file in uploaded_files:
        df = pd.read_csv(file) if isinstance(file, str) else pd.read_csv(file)

        if df.empty:
            st.warning(f"‚ö†Ô∏è ‡πÑ‡∏ü‡∏•‡πå **{file}** ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")
            continue

        columns = df.columns.tolist()

        # ‚úÖ ‡∏ã‡πà‡∏≠‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡πá‡∏ô Viewer
        if mode == "edit":
            x_axis = st.sidebar.selectbox(f"üìå ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏Å‡∏ô X ({file})", columns, key=f"x_{file}")
            y_axis = st.sidebar.selectbox(f"üìå ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏Å‡∏ô Y ({file})", columns, key=f"y_{file}")
            chart_title = st.sidebar.text_input(f"üìù ‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏£‡∏≤‡∏ü ({file})", f"‡∏Å‡∏£‡∏≤‡∏ü‡∏Ç‡∏≠‡∏á {file}")
            sort_order = st.sidebar.checkbox(f"üîΩ ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏à‡∏≤‡∏Å‡∏°‡∏≤‡∏Å‡πÑ‡∏õ‡∏ô‡πâ‡∏≠‡∏¢ ({file})", value=True, key=f"sort_{file}")
        else:
            # ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡πÑ‡∏ß‡πâ (‡πÅ‡∏Å‡πâ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£)
            x_axis, y_axis = "‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", "‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢"
            chart_title = f"‡∏Å‡∏£‡∏≤‡∏ü‡∏Ç‡∏≠‡∏á {file}"
            sort_order = True

        # ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Å‡∏£‡∏≤‡∏ü
        if x_axis and y_axis and pd.api.types.is_numeric_dtype(df[y_axis]):
            if sort_order:
                df = df.sort_values(by=y_axis, ascending=False)

            x_type = 'ordinal' if df[x_axis].dtype == object else 'quantitative'

            chart = alt.Chart(df).mark_bar().encode(
                x=alt.X(x_axis, type=x_type, sort=df[x_axis].tolist()),
                y=alt.Y(y_axis, type='quantitative')
            ).properties(title=chart_title, width=1000, height=500)

            text = alt.Chart(df).mark_text(
                align='center', baseline='bottom', dy=-5, fontSize=12, color='black'
            ).encode(
                x=alt.X(x_axis, type=x_type, sort=df[x_axis].tolist()),
                y=alt.Y(y_axis, type='quantitative'),
                text=y_axis
            )

            st.altair_chart(chart + text, use_container_width=True)


